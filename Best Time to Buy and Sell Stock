/*class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int pro;
        if(prices.size()==0||prices.size()==1)//transcation failed
            return 0;
        pro=prices[1]-prices[0];
        for(int i=0;i<prices.size()-1;i++)
        {
            for(int j=i+1;j<prices.size();j++)
            {
                if(pro<prices[j]-prices[i])
                    pro=prices[j]-prices[i];
            }
        }
        if(pro<=0)
            return 0;
        return pro;
            
            
       
    }
};*/
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int pro=0;
        if(prices.size()==0||prices.size()==1)//transcation failed
            return 0;
        int min=INT_MAX;
        for(int i=0;i<prices.size();i++)
        {
              if(prices[i]<min)
                  min=prices[i];
              else if(prices[i]-min>pro)
                    pro=prices[i]-min;
            
        }
        return pro;
            
            
       
    }
};
