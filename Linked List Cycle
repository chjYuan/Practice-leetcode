
Slow and fast pointer
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        if(head==NULL||head->next==NULL)
            return false;
        ListNode *one=head;
        ListNode *two=head;
        while(two!=NULL)
        {
            one=one->next;
            two=two->next;
            if(two!=NULL)
                two=two->next;
            if(one==two)
                return true;
        }
        return false;       
        }
};
